# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # 소나큐브 테스트 커버리지 측정
    - name: Build and analyze with SonarQube
      env:
        SONAR_PROJECT_KEY: "5RITANG_TEST_COVERAGE"
      run: mvn sonar:sonar -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.login=${{secrets.SONAR_TOKEN}}

    # jar 파일 배포
    - name: upload file
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        source: "target/*.jar"
        target: "~/"
        rm: false

    # 앱 포트로 실행된 jar 파일 종료
    - name: Stop existing Spring Boot application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          echo "Stopping existing application..."
          pid=$(lsof -t -i:${{ secrets.APP_PORT }}) && kill -9 $pid || echo "No application running on port ${{ secrets.APP_PORT }}"

    #앱 포트로 배포 한 jar 파일 실행
    - name: execute shell script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script_stop: true
        script: |
          echo "Starting new application..."
          nohup java -jar ~/target/hello.jar --server.port=${{ secrets.APP_PORT }} > app.log 2>&1 &
          echo "New application started. Check app.log for details."