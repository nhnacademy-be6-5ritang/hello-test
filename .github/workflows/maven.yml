# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: upload file
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        source: "target/*.jar"
        target: "~/"
        rm: false

    - name: execute shell script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ${{ secrets.SSH_ID }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script_stop: true
        script: |
          echo "Stopping existing application..."
          if [ -f "/path/to/app.pid" ]; then
            kill $(cat /path/to/app.pid) || echo "Failed to kill process"
            rm /path/to/app.pid
            echo "Existing application stopped."
          else
            echo "No existing application running"
          fi
          echo "Starting new application..."
          nohup java -jar ~/target/hello.jar --server.port=8080 > app.log 2>&1 &
          echo "New application started. Check app.log for details."
          sleep 10  # 애플리케이션이 시작될 시간을 주기 위해 대기
          echo "Checking if the application is running..."
          if pgrep -f 'java -jar ~/target/hello.jar'; then
            echo "Application is running successfully."
          else
            echo "Application failed to start."
            exit 1
          fi
          echo "Checking if the port 8080 is being used..."
          if netstat -an | grep LISTEN | grep ':8080'; then
            echo "Application is listening on port 8080."
          else
            echo "Application is not listening on port 8080."
            exit 1
          fi
          echo "Script execution completed."

